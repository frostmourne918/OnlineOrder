{"version":3,"sources":["utils.js","components/LoginForm.js","components/FoodList.js","components/MyCart.js","components/SignupForm.js","App.js","reportWebVitals.js","index.js"],"names":["login","credential","loginUrl","username","password","fetch","method","headers","credentials","then","response","status","Error","signup","data","body","JSON","stringify","LoginForm","state","loading","onFinish","setState","message","success","props","onSuccess","catch","err","error","finally","render","name","style","width","margin","Item","rules","required","prefix","UserOutlined","placeholder","Password","LockOutlined","type","htmlType","React","Component","Option","Select","AddToCartButton","itemId","useState","setLoading","title","icon","PlusOutlined","onClick","addItemToCart","FoodList","curRest","setCurRest","restaurants","setRestaurants","foodData","setFoodData","useEffect","json","resData","console","log","restId","menuData","value","onSelect","map","item","id","marginTop","grid","gutter","xs","sm","md","lg","xl","xxl","dataSource","renderItem","extra","src","imageUrl","alt","height","display","price","Text","Typography","MyCart","cartVisible","setCartVisible","cartData","setCartData","checking","setChecking","onCloseDrawer","shape","onClose","visible","footer","justifyContent","strong","totalPrice","marginRight","disabled","orderItemList","length","itemLayout","Meta","menuItem","description","SignupForm","displayModal","handleCancel","signupOnClick","onCancel","destroyOnClose","preserve","Header","Layout","Content","Title","App","authed","setAuthed","className","level","color","lineHeight","marginBottom","padding","maxHeight","overflowY","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fd864170.chunk.js","sourcesContent":["export const login = (credential) => {\r\n    const loginUrl = `/login?username=${credential.username}&password=${credential.password}`;\r\n\r\n    //credential {username:value, password: value}\r\n    // request opt: method, url, data\r\n\r\n    //下面是向后端发送请求\r\n    return fetch(loginUrl, {\r\n        method: \"POST\",\r\n        headers:{\r\n            \"Content-type\" : \"application/json\",\r\n        },\r\n        credentials: \"include\",\r\n    }).then((response) =>{\r\n        //因为HTTP的状态是2开头的是登录成功，否则失败\r\n        if(response.status < 200 || response.status >= 300){\r\n            throw Error(\"Fail to login in\");\r\n        }\r\n    });\r\n};\r\n\r\nexport const signup = (data) => {\r\n    const signupUrl = \"/signup\";\r\n\r\n    return fetch(signupUrl, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data),\r\n    }).then((response) => {\r\n        if (response.status < 200 || response.status >= 300) {\r\n            throw Error(\"Fail to sign up\");\r\n        }\r\n    });\r\n};\r\n\r\nexport const getMenus = (restId) => {\r\n    return fetch(`/restaurant/${restId}/menu`).then((response) => {\r\n        if (response.status < 200 || response.status >= 300) {\r\n            throw Error(\"Fail to get menus\");\r\n        }\r\n\r\n        return response.json();\r\n    });\r\n};\r\n\r\nexport const getRestaurants = () => {\r\n    return fetch(\"/restaurants\").then((response) => {\r\n        if (response.status < 200 || response.status >= 300) {\r\n            throw Error(\"Fail to get restaurants\");\r\n        }\r\n\r\n        return response.json();\r\n    });\r\n};\r\n\r\nexport const getCart = () => {\r\n    return fetch(\"/cart\").then((response) => {\r\n        if (response.status < 200 || response.status >= 300) {\r\n            throw Error(\"Fail to get shopping cart data\");\r\n        }\r\n\r\n        return response.json();\r\n    });\r\n};\r\n\r\nexport const checkout = () => {\r\n    return fetch(\"/checkout\").then((response) => {\r\n        if (response.status < 200 || response.status >= 300) {\r\n            throw Error(\"Fail to checkout\");\r\n        }\r\n    });\r\n};\r\n\r\nexport const addItemToCart = (itemId) => {\r\n    return fetch(`/order/${itemId}`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"include\",\r\n    }).then((response) => {\r\n        if (response.status < 200 || response.status >= 300) {\r\n            throw Error(\"Fail to add menu item to shopping cart\");\r\n        }\r\n    });\r\n};","import { Button, Form, Input, message } from \"antd\";\r\nimport React from \"react\";\r\nimport { LockOutlined, UserOutlined } from \"@ant-design/icons\";\r\nimport { login } from \"../utils\";\r\n\r\nclass LoginForm extends React.Component {\r\n    state = {\r\n        loading: false,\r\n    };\r\n\r\n    onFinish = (data) => {\r\n        //设置button loading\r\n        this.setState({\r\n            loading: true,\r\n        });\r\n        login(data)\r\n            //登陆成功\r\n            .then(() => {\r\n                //message组件（ant design的），显示给用户的\r\n                message.success(`Login Successful`);\r\n                //告诉parent component app已经登录了\r\n                this.props.onSuccess();\r\n            })\r\n            .catch((err) => {\r\n                message.error(err.message);\r\n            })\r\n            .finally(() => {\r\n                this.setState({\r\n                    loading: false,\r\n                });\r\n            });\r\n    };\r\n\r\n    render = () => {\r\n        return (\r\n            <Form\r\n                name=\"normal_login\"\r\n                onFinish={this.onFinish}\r\n                style={{\r\n                    width: 300,\r\n                    margin: \"auto\",\r\n                }}\r\n            >\r\n                <Form.Item\r\n                    name=\"username\"\r\n                    rules={[{ required: true, message: \"Please input your Username!\" }]}\r\n                >\r\n                    <Input prefix={<UserOutlined />} placeholder=\"Username\" />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"password\"\r\n                    rules={[{ required: true, message: \"Please input your Password!\" }]}\r\n                >\r\n                    <Input.Password prefix={<LockOutlined />} placeholder=\"Password\" />\r\n                </Form.Item>\r\n\r\n                <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\" loading={this.state.loading}>\r\n                        Login\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        );\r\n    };\r\n}\r\n\r\nexport default LoginForm;","// foodlist\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Select, List, Card, Tooltip, Button, message } from 'antd';\r\nimport { getRestaurants, getMenus, addItemToCart } from \"../utils\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nconst AddToCartButton = ( { itemId } ) => {\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const addToCart = () => {\r\n        // step1: set loading -> true\r\n        // step2: add item to the server\r\n        // step2.1: case1: success\r\n        //          case2: fail\r\n        //          finally set loading -> false\r\n        setLoading(true);\r\n        addItemToCart(itemId)\r\n            .then( () => {\r\n                message.success(\"Successfully add item\")\r\n            })\r\n            .catch( err => {\r\n                message.error(err.message)\r\n            })\r\n            .finally( () => {\r\n                setLoading(false);\r\n            })\r\n    }\r\n\r\n    return (\r\n        <Tooltip title=\"Add to shopping cart\">\r\n            <Button\r\n                icon={ <PlusOutlined />}\r\n                type=\"primary\"\r\n                loading={loading}\r\n                onClick={addToCart}\r\n            />\r\n        </Tooltip>\r\n    )\r\n}\r\n\r\nfunction FoodList(props) {\r\n    const [loading, setLoading] = useState(false);\r\n    const [curRest, setCurRest] = useState();\r\n    const [restaurants, setRestaurants] = useState([]);\r\n    const [foodData, setFoodData] = useState([]);\r\n\r\n    // didMount\r\n    useEffect( () => {\r\n        // step1: set loading status -> true\r\n        // step2: fetch restaurants data from the server\r\n        // step2.1:\r\n        //  case1: success, setRestaurants\r\n        //  case2: failed,\r\n        //  finally -> set loading status -> false\r\n        setLoading(true);\r\n        getRestaurants()\r\n            .then( resData => {\r\n                console.log('res data -> ', resData);\r\n                setRestaurants(resData);\r\n            })\r\n            .catch( err => {\r\n                message.error(err.message);\r\n            })\r\n            .finally( () => {\r\n                setLoading(false);\r\n            })\r\n\r\n    }, []);\r\n\r\n    // didUpdate -> updated selected restaurant\r\n    useEffect( () => {\r\n        // step1: set loading status -> true\r\n        // step2: get menu from the server\r\n        //  step2.1:\r\n        //      case1: success, setFoodData\r\n        //      case2: failed\r\n        //      finally: set loading status -> false\r\n        if(!curRest) return;\r\n        setLoading(true);\r\n        getMenus(curRest)\r\n            .then( menuData => {\r\n                console.log('menu -> ', menuData);\r\n                setFoodData(menuData);\r\n            })\r\n            .catch( err => {\r\n                message.error(err.message);\r\n            })\r\n            .finally( () => {\r\n                setLoading(false);\r\n            })\r\n    }, [curRest])\r\n\r\n    return (\r\n        <div>\r\n            <Select value={ curRest }\r\n                    loading={ loading }\r\n                    placeholder=\"Select a restaurant\"\r\n                    style={{ width: 300 }}\r\n                    onSelect={ value => setCurRest(value)}\r\n            >\r\n                {\r\n                    restaurants.map( item => {\r\n                        return <Option key={item.id} value={item.id}>{ item.name }</Option>\r\n                    })\r\n                }\r\n            </Select>\r\n            {\r\n                curRest\r\n                &&\r\n                <List\r\n                    style={{ marginTop: 20 }}\r\n                    grid={{\r\n                        gutter: 16,\r\n                        xs: 1,\r\n                        sm: 2,\r\n                        md: 4,\r\n                        lg: 4,\r\n                        xl: 3,\r\n                        xxl: 3,\r\n                    }}\r\n\r\n                    dataSource={foodData}\r\n                    renderItem={ item => (\r\n                        <List.Item>\r\n                            <Card title={item.name} extra={<AddToCartButton itemId={item.id}/>}>\r\n                                <img\r\n                                    src={item.imageUrl}\r\n                                    alt={item.name}\r\n                                    style={{ height: \"auto\", width: \"100%\", display: \"block\" }}\r\n                                />\r\n                                { `Price: ${item.price}`}\r\n                            </Card>\r\n                        </List.Item>\r\n                    )}\r\n                />\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FoodList;","import { Button, Drawer, List, message, Typography } from \"antd\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { checkout, getCart } from \"../utils\";\r\n\r\nconst { Text } = Typography;\r\n\r\nconst MyCart = () => {\r\n    const [cartVisible, setCartVisible] = useState(false);\r\n    const [cartData, setCartData] = useState();\r\n    const [loading, setLoading] = useState(false);\r\n    const [checking, setChecking] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (!cartVisible) {\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        getCart()\r\n            .then((data) => {\r\n                setCartData(data);\r\n            })\r\n            .catch((err) => {\r\n                message.error(err.message);\r\n            })\r\n            .finally(() => {\r\n                setLoading(false);\r\n            });\r\n    }, [cartVisible]);\r\n\r\n    const onCheckOut = () => {\r\n        setChecking(true);\r\n        checkout()\r\n            .then(() => {\r\n                message.success(\"Successfully checkout\");\r\n                setCartVisible(false);\r\n            })\r\n            .catch((err) => {\r\n                message.error(err.message);\r\n            })\r\n            .finally(() => {\r\n                setChecking(false);\r\n            });\r\n    };\r\n\r\n    const onCloseDrawer = () => {\r\n        setCartVisible(false);\r\n    };\r\n\r\n    const onOpenDrawer = () => {\r\n        setCartVisible(true);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Button type=\"primary\" shape=\"round\" onClick={onOpenDrawer}>\r\n                Cart\r\n            </Button>\r\n            <Drawer\r\n                title=\"My Shopping Cart\"\r\n                onClose={onCloseDrawer}\r\n                visible={cartVisible}\r\n                width={520}\r\n                footer={\r\n                    <div\r\n                        style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-between\",\r\n                        }}\r\n                    >\r\n                        <Text strong={true}>{`Total price: $${cartData?.totalPrice}`}</Text>\r\n                        <div>\r\n                            <Button onClick={onCloseDrawer} style={{ marginRight: 8 }}>\r\n                                Cancel\r\n                            </Button>\r\n                            <Button\r\n                                onClick={onCheckOut}\r\n                                type=\"primary\"\r\n                                loading={checking}\r\n                                disabled={loading || cartData?.orderItemList.length === 0}\r\n                            >\r\n                                Checkout\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            >\r\n                <List\r\n                    loading={loading}\r\n                    itemLayout=\"horizontal\"\r\n                    dataSource={cartData?.orderItemList}\r\n                    renderItem={(item) => (\r\n                        <List.Item>\r\n                            <List.Item.Meta\r\n                                title={item.menuItem.name}\r\n                                description={`$${item.price}`}\r\n                            />\r\n                        </List.Item>\r\n                    )}\r\n                />\r\n            </Drawer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MyCart;","import { Button, Form, Input, message, Modal } from \"antd\";\r\nimport React from \"react\";\r\nimport { LockOutlined, UserOutlined } from \"@ant-design/icons\";\r\nimport { signup } from \"../utils\";\r\n\r\nclass SignupForm extends React.Component {\r\n    state = {\r\n        displayModal: false,\r\n    };\r\n\r\n    handleCancel = () => {\r\n        this.setState({\r\n            displayModal: false,\r\n        });\r\n    };\r\n\r\n    signupOnClick = () => {\r\n        this.setState({\r\n            displayModal: true,\r\n        });\r\n    };\r\n\r\n    onFinish = (data) => {\r\n        signup(data)\r\n            .then(() => {\r\n                this.setState({\r\n                    displayModal: false,\r\n                });\r\n                message.success(`Successfully signed up`);\r\n            })\r\n            .catch((err) => {\r\n                message.error(err.message);\r\n            });\r\n    };\r\n\r\n    render = () => {\r\n        return (\r\n            <>\r\n                <Button shape=\"round\" type=\"primary\" onClick={this.signupOnClick}>\r\n                    Register\r\n                </Button>\r\n                <Modal\r\n                    title=\"Register\"\r\n                    visible={this.state.displayModal}\r\n                    onCancel={this.handleCancel}\r\n                    footer={null}\r\n                    destroyOnClose={true}\r\n                >\r\n                    <Form\r\n                        name=\"normal_register\"\r\n                        onFinish={this.onFinish}\r\n                        preserve={false}\r\n                    >\r\n                        <Form.Item\r\n                            name=\"email\"\r\n                            rules={[{ required: true, message: \"Please input your email!\" }]}\r\n                        >\r\n                            <Input prefix={<UserOutlined />} placeholder=\"Email\" />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"password\"\r\n                            rules={[\r\n                                { required: true, message: \"Please input your password!\" },\r\n                            ]}\r\n                        >\r\n                            <Input prefix={<LockOutlined />} placeholder=\"Password\" />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"firstName\"\r\n                            rules={[\r\n                                { required: true, message: \"Please input your first name!\" },\r\n                            ]}\r\n                        >\r\n                            <Input placeholder=\"firstname\" />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"lastName\"\r\n                            rules={[\r\n                                { required: true, message: \"Please input your last name!\" },\r\n                            ]}\r\n                        >\r\n                            <Input placeholder=\"lastname\" />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\">\r\n                                Register\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Modal>\r\n            </>\r\n        );\r\n    };\r\n}\r\n\r\nexport default SignupForm;","import React, { useState } from 'react';\nimport { Layout, Typography } from \"antd\";\n\nimport LoginForm from \"./components/LoginForm\";\nimport FoodList from \"./components/FoodList\";\nimport MyCart from \"./components/MyCart\";\nimport SignupForm from \"./components/SignupForm\";\nimport './App.css';\n\nconst { Header, Content } = Layout;\nconst { Title } = Typography;\n\nfunction App() {\n    const [ authed, setAuthed ] = useState(false);\n\n    return (\n        <Layout style={{ height: \"100vh\" }}>\n            <Header>\n                <div className=\"header\">\n                    <Title level={2}\n                           style={{ color: \"white\", lineHeight: \"inherit\", marginBottom: 0 }}\n                    >\n                        Lai Food\n                    </Title>\n                    <div>\n                        { authed\n                            ?\n                            <MyCart />\n                            :\n                            <SignupForm/>\n                        }\n                    </div>\n                </div>\n            </Header>\n            <Content style={{\n                padding: \"50px\",\n                maxHeight: \"calc(100% - 64px)\",\n                overflowY: \"auto\",\n            }}>\n                {\n                    authed\n                        ?\n                        <FoodList />\n                        :\n                        <LoginForm\n                            onSuccess={ () => setAuthed(true) }\n                        />\n                }\n            </Content>\n        </Layout>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}